buildscript {
    repositories {
        mavenLocal()
        maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.pkg.jetbrains.space/public/p/ktor/eap"}
        //jcenter()
        google()
    }

    dependencies {
        classpath "net.sf.proguard:proguard-gradle:$proguardVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}


apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
//apply plugin: 'com.google.devtools.ksp'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

group 'com.github.rwsbillyang.rule.runtime'
version "1.0.0"


sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}
// Use KSP Generated sources
sourceSets.main {
    java.srcDirs("build/generated/ksp/main/kotlin")
}

sourceCompatibility = "$jdkVersion"
targetCompatibility = "$jdkVersion"


compileKotlin {
    kotlinOptions.jvmTarget = "$jdkVersion"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$jdkVersion"
}


repositories {
    mavenLocal()
    mavenCentral()
    //jcenter()
    google()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version") // JVM dependency

    testImplementation 'junit:junit:4.13.2'
  //  compileOnly("com.github.rwsbillyang:ktorKit:$ktorKitVersion")

}
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
